{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","images/pixabay.svg","App/App.js","index.js"],"names":["ImageGalleryItem","images","openModal","clickImage","e","target","dataset","action","map","image","className","onClick","href","webformatURL","alt","largeImageURL","id","ImageGallery","Searchbar","state","inputText","handleChange","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","toLowerCase","toast","this","type","name","onChange","autoComplete","autoFocus","placeholder","Component","Button","onClickBtn","modalRoot","document","querySelector","Modal","handleKeydown","code","closeModal","handleOverlay","event","window","addEventListener","removeEventListener","createPortal","src","App","searchQuery","page","status","error","showModal","handleSerchQuery","onLoadMore","preState","toggleModal","url","writeDownData","newImages","hits","concat","checkNeedLoadMore","length","prevProps","prevState","fetch","then","response","ok","json","Promise","reject","Error","catch","scrollTo","top","documentElement","scrollHeight","behavior","logo","color","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e6970b0.chunk.js","sourcesContent":["import './imageGalleryItem.css'\n\nexport default function ImageGalleryItem({ images, openModal }) {\n    \n    function clickImage(e) {\n        openModal(e.target.dataset.action)\n    }\n    \n    return (\n        <>\n            {images.map((image) =>\n            <li \n                className=\"ImageGalleryItem\" \n                key={image.id}\n                onClick={clickImage}>\n                    <img\n                        href={image.webformatURL}\n                        alt=\"\"\n                        className=\"ImageGalleryItem-image\"\n                        data-action={image.largeImageURL}\n                    />\n            </li>)\n            }\n        </>\n    )\n}\n","import ImageGalleryItem from '../ImageGalleryItem'\nimport React from 'react'\nimport './imageGallery.css'\n\nexport default function ImageGallery({images, openModal}) {\n\n    return (\n        <>\n        {images &&\n            (<ul className=\"ImageGallery\">\n            <ImageGalleryItem \n                images={images}\n                openModal={openModal} />\n        </ul>)}\n        </>\n    )\n}","import React, { Component } from \"react\"\n// import { ImSearch } from 'react-icons/im'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './searchbar.css'\n\nexport default class Searchbar extends Component {\n    state = {\n        inputText:\"\"\n    }\n\n    handleChange = e => {\n        this.setState({inputText: e.currentTarget.value})\n    }\n\n    handleSubmit = e => {\n        const {inputText} = this.state\n        e.preventDefault();\n        if (inputText.trim() === \"\") {\n            toast('enter your search term')\n            return\n        }\n        this.props.onSubmit(inputText.toLowerCase())\n        this.setState({inputText:\"\"})\n    }\n\n    render() {\n        return (\n\n            <header className=\"Searchbar\">\n\n                <form\n                    onSubmit={this.handleSubmit}\n                    className=\"SearchForm\">\n                    \n                <button \n                    type=\"submit\" \n                    className=\"SearchForm-button\">\n                        {/* <ImSearch/>     */}\n                        <span className=\"SearchForm-button-label\">\n                            Search\n                        </span>\n                </button>\n\n                <input\n                  className=\"SearchForm-input\"\n                  type=\"text\"\n                  name= \"inputText\"\n                  value={this.state.inputText}\n                  onChange={this.handleChange}\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search images and photos\"\n                    />\n                    \n                </form>\n                    \n            </header>\n        )\n    }\n}","import './button.css'\n\nexport default function Button({ onClickBtn }) {\n    return(\n        <button\n            type=\"button\"\n            className=\"Button\"\n            onClick={onClickBtn}>\n        Load more\n        </button>\n    )\n}","import React, {Component} from \"react\"\nimport { createPortal } from 'react-dom'\nimport './modal.css'\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport default class Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeydown)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeydown)\n    }\n    \n    handleKeydown = e => {\n        if (e.code === 'Escape') {\n                this.props.closeModal()\n            }\n    }\n\n    handleOverlay = event => {\n        if (event.currentTarget === event.target) {\n            this.props.closeModal()\n        }\n    }\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\"\n                onClick={this.handleOverlay}>\n              <div className=\"Modal\">\n                <img src={this.props.largeImageURL} alt=\"\" />\n              </div>\n            </div>,\n            modalRoot\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/pixabay.97bc8187.svg\";","import './App.css';\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from \"react-loader-spinner\";\nimport ImageGallery from '../components/ImageGallery/ImageGallery';\nimport Searchbar from '../components/Searchbar';\nimport Button from '../components/Button';\nimport Modal from '../components/Modal';\nimport logo from '.././images/pixabay.svg'\n// import APIservice from '../APIservice/APIservice';\n\nclass App extends Component {\n\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    images: null,\n    // idle, pending, resolved, rejected\n    status: 'idle',\n    error: null,\n    showModal: false,\n    largeImageURL: null,\n  }\n\n  handleSerchQuery = inputText => {\n    this.setState({searchQuery: inputText, images: null})\n  }\n\n  onLoadMore = () => {\n    this.setState(preState => ({page: preState.page + 1}))\n  }\n\n  toggleModal = () => {\n    this.setState(({showModal}) => ({\n      showModal: !showModal\n    }))\n  }\n\n  openModal = url => {\n    this.toggleModal()\n    this.setState({largeImageURL: url})\n  }\n \n  componentDidUpdate(prevProps, prevState) {\n        \n    const { searchQuery, page } = this.state\n    const key = '23100345-a1985f2d3b70e4240f74cca05'\n    const orientation = 'horizontal'\n    const imageType = 'photo'\n    const perPage = 12\n\n \n\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.setState({ status: 'pending'})\n      fetch(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=${imageType}&orientation=${orientation}&per_page=${perPage}`)\n        .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n          return Promise.reject(\n            new Error(`nothing found for this request: ${searchQuery}`)\n            // this.setState({ status: 'rejected' })\n          )\n        })\n        .then(images => {\n            this.setState({ status: 'resolved' })\n            this.writeDownData(images)\n        })\n        .catch(error => this.setState({status: 'rejected'}))\n    }\n\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n    });\n  }\n    \n    writeDownData = (newImages) => {\n        if (this.state.images === null) {\n            this.setState({images: newImages.hits})\n        } else {\n            this.setState((preState) => ({images: preState.images.concat(newImages.hits)}))\n        }\n    }\n\n  checkNeedLoadMore = () => {\n    if (this.state.images !== null\n      && this.state.images.length !== 0\n      && this.state.images.length % 12 === 0) {\n        return true  \n      }\n  }\n\n  render () {\n    const { showModal, largeImageURL, status } = this.state\n\n    return (\n      <div className=\"App\">\n\n        <Searchbar onSubmit={this.handleSerchQuery} />\n\n        {(status === 'idle') && \n          <img src={logo} alt=\"\" className=\"Logo-image\" />}\n          \n        {(status === 'pending') &&\n          <div className=\"Div-loader\">\n            <Loader\n            type=\"ThreeDots\"\n            color=\"blue\" />\n          </div>}\n        \n        {(status === 'resolved') &&\n          <ImageGallery\n            images={this.state.images}\n            openModal={this.openModal}\n          />}\n          \n        {(status === 'rejected') &&\n          toast('search error')}\n        \n        \n        {this.checkNeedLoadMore() &&\n          < Button onClickBtn={this.onLoadMore} />}\n        \n        {showModal && <Modal\n          closeModal={this.toggleModal}\n          largeImageURL={largeImageURL} />}\n        \n        <ToastContainer autoClose={2000} />\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}