{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","App/App.js","index.js"],"names":["ImageGalleryItem","images","openModal","clickImage","e","target","dataset","action","console","log","map","image","className","onClick","src","webformatURL","alt","largeImageURL","id","ImageGallery","state","isLoading","error","writeDownData","newImages","setState","hits","preState","concat","prevProps","this","props","searchQuery","page","fetch","then","response","ok","json","Promise","reject","Error","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","type","color","Component","Searchbar","inputText","handleChange","currentTarget","value","handleSubmit","preventDefault","trim","onSubmit","toLowerCase","toast","name","onChange","autoComplete","autoFocus","placeholder","autoClose","Button","onClickBtn","modalRoot","querySelector","Modal","handleKeydown","code","closeModal","handleOverlay","event","addEventListener","removeEventListener","createPortal","App","showModal","handleSerchQuery","onLoadMore","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66b98cd6.chunk.js","sourcesContent":["import './imageGalleryItem.css'\n\nexport default function ImageGalleryItem({ images, openModal }) {\n    \n    function clickImage(e) {\n        openModal(e.target.dataset.action)\n        console.log(e.target.dataset.action)\n    }\n    \n    return (\n        <>\n            {images.map((image) =>\n            <li \n                className=\"ImageGalleryItem\" \n                key={image.id}\n                onClick={clickImage}>\n                    <img\n                        src={image.webformatURL}\n                        alt=\"\"\n                        className=\"ImageGalleryItem-image\"\n                        data-action={image.largeImageURL}\n                    />\n            </li>)\n            }\n        </>\n    )\n}\n","import ImageGalleryItem from '../ImageGalleryItem'\nimport React, { Component } from 'react'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from \"react-loader-spinner\"\nimport 'react-toastify/dist/ReactToastify.css'\nimport './imageGallery.css'\n\nexport default class ImageGallery extends Component {\n    state = {\n        images: null,\n        isLoading: false,\n        error: null\n    }\n    \n    componentDidUpdate(prevProps) {\n        const { searchQuery, page } = this.props\n        if (prevProps.searchQuery !== searchQuery || prevProps.page !== page) {\n            this.setState({ isLoading: true })\n            fetch(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=23100345-a1985f2d3b70e4240f74cca05&image_type=photo&orientation=horizontal&per_page=12`)\n                .then(response => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                    return Promise.reject(\n                        new Error(`nothing found for this request: ${searchQuery}`)\n                    )})\n                .then(images => this.writeDownData(images))\n                    .catch(error => this.setState({error}))\n                        .finally(() => this.setState({isLoading: false}))\n        }\n\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    }\n    \n    writeDownData = (newImages) => {\n        if (this.state.images === null) {\n            this.setState({images: newImages.hits})\n        } else {\n            this.setState((preState) => ({images: preState.images.concat(newImages.hits)}))\n        }\n    }\n\n\n    render() {\n\n        return (\n            <>\n            {this.state.images &&\n                (<ul className=\"ImageGallery\">\n                <ImageGalleryItem \n                    images={this.state.images}\n                    openModal={this.props.openModal} />\n                \n            </ul>)}\n            {this.state.isLoading &&\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"blue\" />\n            }\n            </>\n        )\n    }\n}","import React, { Component } from \"react\"\n// import { ImSearch } from 'react-icons/im'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './searchbar.css'\n\nexport default class Searchbar extends Component {\n    state = {\n        inputText:\"\"\n    }\n\n    handleChange = e => {\n        this.setState({inputText: e.currentTarget.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.inputText.trim() === \"\") {\n            toast('enter your search term')\n            return\n        }\n        this.props.onSubmit(this.state.inputText.toLowerCase())\n        this.setState({inputText:\"\"})\n    }\n\n    render() {\n        return (\n            \n            <header className=\"Searchbar\">\n                <form\n                    onSubmit={this.handleSubmit}\n                    className=\"SearchForm\">\n                <button \n                    type=\"submit\" \n                    className=\"SearchForm-button\">\n                        {/* <ImSearch/>     */}\n                    <span className=\"SearchForm-button-label\"> Search</span>\n                </button>\n        \n\n                <input\n                  className=\"SearchForm-input\"\n                  type=\"text\"\n                  name= \"inputText\"\n                  value={this.state.inputText}\n                  onChange={this.handleChange}\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search images and photos\"\n                />\n                </form>\n                    <ToastContainer autoClose={2000}/>\n            </header>\n        )\n    }\n}","import './button.css'\n\nexport default function Button({ onClickBtn }) {\n    return(\n        <button\n            type=\"button\"\n            className=\"Button\"\n            onClick={onClickBtn}>\n        Load more\n        </button>\n    )\n}","import React, {Component} from \"react\"\nimport { createPortal } from 'react-dom'\nimport './modal.css'\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport default  class Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeydown)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeydown)\n    }\n    \n    handleKeydown = e => {\n        if (e.code === 'Escape') {\n                this.props.closeModal()\n            }\n    }\n\n    handleOverlay = event => {\n        if (event.currentTarget === event.target) {\n            this.props.closeModal()\n        }\n    }\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\"\n                onClick={this.handleOverlay}>\n              <div className=\"Modal\">\n                <img src={this.props.largeImageURL} alt=\"\" />\n              </div>\n            </div>,\n            modalRoot\n        )\n    }\n}","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport ImageGallery from '../components/ImageGallery/ImageGallery';\nimport Searchbar from '../components/Searchbar';\nimport Button from '../components/Button';\nimport Modal from '../components/Modal'\n\nclass App extends Component {\n\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    showModal: false,\n    largeImageURL: null\n  }\n\n  handleSerchQuery = inputText => {\n    this.setState({searchQuery: inputText})\n  }\n\n  onLoadMore = () => {\n    this.setState(preState => ({page: preState.page + 1}))\n  }\n\n  toggleModal = () => {\n    this.setState(({showModal}) => ({\n      showModal: !showModal\n    }))\n  }\n\n  openModal = e => {\n    this.toggleModal()\n    this.setState({largeImageURL: e})\n  }\n \n  render () {\n    const { showModal, largeImageURL } = this.state\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSerchQuery} />\n        <ImageGallery\n          searchQuery={this.state.searchQuery}\n          openModal={this.openModal}\n          page={this.state.page}/>\n        <Button onClickBtn={this.onLoadMore} />\n        {showModal && <Modal closeModal={this.toggleModal} largeImageURL={largeImageURL}/>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}